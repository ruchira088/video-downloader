version: 2.1

alias:
  - &install-ansible
    name: Install Ansible
    command: |
      sudo apt update && \
      sudo apt install python3-pip -y && \
      pip3 install boto3 botocore openshift ansible

jobs:
  build-ci-docker-image:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker
      - run: *install-ansible
      - checkout
      - run:
          name: Build and publish Docker CI image
          command: ansible-playbook playbooks/build-and-publish-docker-ci.yml

  build-and-test:
    docker:
      - image: ruchira088/docker-ci:vdbe
    steps:
      - checkout
      - restore_cache: &dependency-cache-keys
          keys:
            - sbt-cache-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-{{ checksum "project/Dependencies.scala" }}
            - sbt-cache
      - run:
          name: Fetch compile dependencies
          command: sbt update
      - run:
          name: Clean compile all sbt projects
          command: sbt cleanCompile
      - run:
          name: Execute all tests
          command: sbt test
      - save_cache:
          key: sbt-cache-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-{{ checksum "project/Dependencies.scala" }}
          paths:
            - ~/.sbt
            - ~/.cache/coursier

  build-and-publish-docker-images:
    docker:
      - image: ruchira088/docker-ci:vdbe
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache: *dependency-cache-keys
      - run:
          name: Build and publish Docker images to Docker Hub
          command: ansible-playbook playbooks/build-and-publish-docker-images.yml

  deploy-to-k8s:
    docker:
      - image: ruchira088/docker-ci:vdbe
    steps:
      - checkout
      - run:
          name: Deploy applications to K8s
          command: ansible-playbook playbooks/k8s-deploy.yml

orbs:
  slack: circleci/slack@3

workflows:
  version: 2

  video-downloader-back-end:
    jobs:
      - build-and-test:
          post-steps:
            - slack/status

      - build-and-publish-docker-images:
          context: aws-credentials
          requires:
            - build-and-test
          post-steps:
            - slack/status

      - deploy-to-k8s:
          context: aws-credentials
          requires:
            - build-and-publish-docker-images
          post-steps:
            - slack/status

  docker-ci:
    jobs:
      - build-ci-docker-image:
          context: aws-credentials
          post-steps:
            - slack/status
    triggers:
      - schedule:
          cron: "0 4 1,15 * *"
          filters:
            branches:
              only:
                - dev
