version: "3.8"

services:
  nginx:
    image: nginx
    healthcheck:
      test: "/opt/scripts/wait-for-it.sh localhost:443"
      start_period: 5s
      interval: 10s
      timeout: 5s
    depends_on:
      - api-1
      - api-2
    ports:
      - 8443:443
    volumes:
      - "./nginx/ssl:/etc/ssl"
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./docker-compose/scripts:/opt/scripts"

  api-1: &api-app
    image: video-downloader-api
    healthcheck:
      test: "/opt/scripts/wait-for-it.sh localhost:8000"
      start_period: 10s
      interval: 10s
      timeout: 5s
    depends_on:
      postgres:
        condition: service_healthy
      migration-application:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
      kafka-broker:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    volumes:
      - "./videos:/opt/videos"
      - "./images:/opt/images"
      - "./api/src/main/resources/logback.xml:/opt/data/logback.xml"
      - "./docker-compose/scripts:/opt/scripts"
    environment:
      DATABASE_URL: "jdbc:postgresql://postgres:5432/video-downloader"
      DATABASE_USER: "admin"
      DATABASE_PASSWORD: "password"
      REDIS_HOSTNAME: "redis"
      REDIS_PORT: "6379"
      REDIS_PASSWORD: "redis-password"
      KAFKA_BROKERS: "kafka-broker:9092"
      SCHEMA_REGISTRY: "http://schema-registry:8081"
      VIDEO_FOLDER: "/opt/videos"
      IMAGE_FOLDER: "/opt/images"

  api-2:
    *api-app

  batch-1: &batch-app
    image: video-downloader-batch
    depends_on:
      postgres:
        condition: service_healthy
      migration-application:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
      kafka-broker:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    volumes:
      - "./videos:/opt/videos"
      - "./images:/opt/images"
      - "./batch/src/main/resources/logback.xml:/opt/data/logback.xml"
    environment:
      DATABASE_URL: "jdbc:postgresql://postgres:5432/video-downloader"
      DATABASE_USER: "admin"
      DATABASE_PASSWORD: "password"
      REDIS_HOSTNAME: "redis"
      REDIS_PORT: "6379"
      REDIS_PASSWORD: "redis-password"
      KAFKA_BROKERS: "kafka-broker:9092"
      SCHEMA_REGISTRY: "http://schema-registry:8081"
      VIDEO_FOLDER: "/opt/videos"
      IMAGE_FOLDER: "/opt/images"

  batch-2:
    *batch-app

  migration-application:
    image: video-downloader-migration-application
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: "jdbc:postgresql://postgres:5432/video-downloader"
      DATABASE_USER: "admin"
      DATABASE_PASSWORD: "password"

  postgres:
    image: postgres
#    command: ["postgres", "-c", "log_statement=all"]
    healthcheck:
      test: "pg_isready -U admin -d video-downloader"
      start_period: 10s
      interval: 10s
      timeout: 5s
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: "video-downloader"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "password"

  redis:
    image: redis
    command: "redis-server --requirepass redis-password"
    healthcheck:
      test: "redis-cli ping"
      start_period: 1s
      interval: 2s
      timeout: 1s
    ports:
      - 6379:6379

  zookeeper:
    image: zookeeper
    healthcheck:
      test: "/opt/scripts/wait-for -t 3 zookeeper:2181"
      start_period: 10s
      interval: 10s
      timeout: 5s
    environment:
      ZOO_LOG4J_PROP: ERROR,CONSOLE
    volumes:
      - "./docker-compose/scripts:/opt/scripts"

  kafka-broker:
    image: confluentinc/cp-kafka
    healthcheck:
      test: "/opt/scripts/wait-for -t 3 kafka-broker:9092"
      start_period: 10s
      interval: 10s
      timeout: 5s
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092
    volumes:
      - "./docker-compose/scripts:/opt/scripts"

  schema-registry:
    image: confluentinc/cp-schema-registry
    healthcheck:
      test: "/opt/scripts/wait-for -t 3 schema-registry:8081"
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      kafka-broker:
        condition: service_healthy
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka-broker:9092"
    volumes:
      - "./docker-compose/scripts:/opt/scripts"

  schema-registry-ui:
    image: landoop/schema-registry-ui
    healthcheck:
      test: "/opt/scripts/wait-for -t 3 schema-registry-ui:8000"
      start_period: 10s
      interval: 10s
      timeout: 5s
    depends_on:
      schema-registry:
        condition: service_healthy
    ports:
      - 8000:8000
    environment:
      SCHEMAREGISTRY_URL: "http://schema-registry:8081"
      PROXY: "true"
    volumes:
      - "./docker-compose/scripts:/opt/scripts"