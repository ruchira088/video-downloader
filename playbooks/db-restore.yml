---
- hosts: localhost
  connection: local

  vars:
    s3_backup_file: "{{ backup_file }}"

  tasks:
    - name: Gather git information
      import_tasks: tasks/git-info.yml

    - name: Install dependencies
      import_tasks: tasks/install-dependencies.yml

    - name: Build & publish DB restore Docker image
      import_tasks: tasks/build-and-publish-db-operation-docker-image.yml
      vars:
        db_operation: restore
        publish: true

    - set_fact:
        k8s_vars:
          production:
            namespace: video-downloader-back-end
          development:
            namespace: video-downloader-back-end-{{ git_branch }}

    - set_fact:
        namespace: "{{ k8s_vars[env].namespace }}"
        job_id: {{ git_branch }}-{{ ansible_date_time.iso8601_basic_short | lower }}
        config_values:
          DATABASE_URL: postgresql:5432/video-downloader
          BACKUP_FILE: {{ git_branch }}/{{ s3_backup_file }}
        secrets:
          DATABASE_USER: "{{ lookup('aws_ssm', '/video-downloader/' + env + '/database/user', region='ap-southeast-2') }}"
          DATABASE_PASSWORD: "{{ lookup('aws_ssm', '/video-downloader/' + env + '/database/password', region='ap-southeast-2') }}"
          AWS_ACCESS_KEY_ID: "{{ lookup('aws_ssm', '/video-downloader/shared/backup-creator/access-key-id', region='ap-southeast-2') }}"
          AWS_SECRET_ACCESS_KEY: "{{ lookup('aws_ssm', '/video-downloader/shared/backup-creator/secret-access-key', region='ap-southeast-2') }}"

    - name: Render DB restore K8s resource files
      import_tasks: tasks/k8s-db-restore-files.yml

    - name: Set kube_config
      import_tasks: tasks/k8s-config.yml

    - name: Deploy DB restore
      block:
        - name: Create ConfigMap
          command: kubectl apply -f k8s-output/db-restore/ConfigMap.yaml --kubeconfig {{ kubeconfig }}

        - name: Create Secrets
          command: kubectl apply -f k8s-output/db-restore/Secrets.yaml --kubeconfig {{ kubeconfig }}

        - name: Deploy Job
          command: kubectl apply -f k8s-output/db-restore --kubeconfig {{ kubeconfig }}

        - name: Wait Job to complete
          command: |
            kubectl wait \
              --for=condition=complete \
              job/db-restore-job-{{ job_id }} \
              --kubeconfig {{ kubeconfig }} \
              -n {{ namespace }} \
              --timeout=120s

    - name: Clean up output directory
      file:
        path: k8s-output
        state: absent