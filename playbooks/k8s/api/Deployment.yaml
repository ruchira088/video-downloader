apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: {{ namespace }}
spec:
  selector:
    matchLabels:
      app: api
      branch: {{ git_branch }}
  replicas: 1
  template:
    metadata:
      labels:
        app: api
        branch: {{ git_branch }}
    spec:
      imagePullSecrets:
        - name: docker-registry-credentials
{% if app_node_selector | length > 0 %}
      nodeSelector:
{% for key, value in app_node_selector.items() %}
        {{ key }}: "{{ value }}"
{% endfor %}
{% else %}
{% endif %}
      containers:
        - name: api-container
          image: ghcr.io/ruchira088/video-downloader-api:{{ git_branch }}-{{ git_commit }}
          envFrom:
            - configMapRef:
                name: api-data-config-map
            - secretRef:
                name: api-secrets
          readinessProbe:
            httpGet:
              port: http4s-port
              path: /service/info
              httpHeaders:
                - name: X-Request-ID
                  value: k8s-readiness-probe
          livenessProbe:
            httpGet:
              port: http4s-port
              path: /service/info
              httpHeaders:
                - name: X-Request-ID
                  value: k8s-liveness-probe
          startupProbe:
            periodSeconds: 5
            failureThreshold: 10
            httpGet:
              port: http4s-port
              path: /service/info
              httpHeaders:
                - name: X-Request-ID
                  value: k8s-startup-probe
          ports:
            - name: http4s-port
              containerPort: 8000
          volumeMounts:
            - mountPath: /opt/data
              name: file-config-map
{% for path_mapping in host_path_mappings %}
            - mountPath: {{ path_mapping.pod_mount_path }}
              name: path-mapping-{{ loop.index }}
{% endfor %}
{% for persistent_volume_claim in persistent_volume_claims %}
            - mountPath: {{ persistent_volume_claim.pod_mount_path }}
              name: {{ persistent_volume_claim.name }}
{% endfor %}
      volumes:
        - name: file-config-map
          configMap:
            name: api-file-config-map
{% for path_mapping in host_path_mappings %}
        - name: path-mapping-{{ loop.index }}
          hostPath:
            path: {{ path_mapping.host_path }}
            type: Directory
{% endfor %}
{% for persistent_volume_claim in persistent_volume_claims %}
        - name: {{ persistent_volume_claim.name }}
          persistentVolumeClaim:
            claimName: {{ persistent_volume_claim.name }}
{% endfor %}