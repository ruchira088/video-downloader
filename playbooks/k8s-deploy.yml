---
- hosts: localhost
  connection: local

  vars:
    docker_registry: localhost:32000
    host_video_folder: /home/ruchira/Videos
    host_image_folder: /home/ruchira/Pictures

  tasks:
    - name: Render K8s resource files
      import_tasks: tasks/k8s-resource-files.yml

    - name: Set kube_config
      import_tasks: tasks/k8s-config.yml

    - name: Deploy K8s resources
      block:
        - name: Create Namespace
          command: kubectl apply -f k8s-output/Namespace.yaml --kubeconfig {{ kube_config }}

        - name: Deploy DB migration
          block:
            - name: Create ConfigMap
              command: kubectl apply -f k8s-output/db-migration/ConfigMap.yaml --kubeconfig {{ kube_config }}

            - name: Create Secrets
              command: kubectl apply -f k8s-output/db-migration/Secrets.yaml --kubeconfig {{ kube_config }}

            - name: Deploy Job
              command: kubectl apply -f k8s-output/db-migration --kubeconfig {{ kube_config }}

            - name: Wait Job to complete
              command: kubectl wait --for=condition=complete job/database-migration-job-{{ git_commit }} --kubeconfig {{ kube_config }} -n video-downloader-api-{{ git_branch }} --timeout=120s

        - name: Deploy web
          block:
            - name: Create ConfigMap
              command: kubectl apply -f k8s-output/web/ConfigMap.yaml --kubeconfig {{ kube_config }}

            - name: Create Secrets
              command: kubectl apply -f k8s-output/web/Secrets.yaml --kubeconfig {{ kube_config }}

            - name: Deploy application
              command: kubectl apply -f k8s-output/web --kubeconfig {{ kube_config }}

        - name: Deploy batch
          block:
            - name: Create ConfigMap
              command: kubectl apply -f k8s-output/batch/ConfigMap.yaml --kubeconfig {{ kube_config }}

            - name: Create Secrets
              command: kubectl apply -f k8s-output/batch/Secrets.yaml --kubeconfig {{ kube_config }}

            - name: Deploy application
              command: kubectl apply -f k8s-output/batch --kubeconfig {{ kube_config }}

        - name: Wait for successful web deployment
          command: kubectl rollout status deployment web-deployment --kubeconfig {{ kube_config }} -n video-downloader-api-{{ git_branch }}

        - name: Wait for successful batch deployment
          command: kubectl rollout status deployment batch-deployment --kubeconfig {{ kube_config }} -n video-downloader-api-{{ git_branch }}

    - name: Clean up output directory
      file:
        path: k8s-output
        state: absent
